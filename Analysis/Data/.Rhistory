ggplot(ProAdult, aes(Age, log(AnnualIncome)) +
geom_point(aes(color=Gender),stat="identity") +
theme_economist() +
geom_smooth(method = 'lm')
Q5dlm <- lm(log(AnnualIncome) ~ Age, data = ProAdult)
ggplot(ProAdult, aes(Age, log(AnnualIncome))) +
geom_point(aes(color=Gender),stat="identity") +
theme_economist() +
geom_smooth(method = 'lm')
ggplot(ProAdult, aes(SWLSmean, HDI)) +
geom_point(aes(fill=Gender), stat="identity") +
theme_economist() +
geom_smooth(method = 'lm')
Q5elm <- lm(HDI ~ Age, data = ProAdult)
summary(Q5elm)
Q5elm <- lm(SWLSmean ~ Age, data = ProAdult)
Q5elm <- lm(HDI ~ SWLSmean, data = ProAdult)
summary(Q5elm)
Q5elm <- lm(SWLSmean ~ Category, data = ProAdult)
summary(Q5elm)
ggplot(ProAdult, aes(SWLSmean, Category)) +
geom_bar(aes(fill=Gender), stat="identity") +
theme_economist()
ggplot(ProAdult, aes(SWLSmean)) +
geom_bar(aes(fill=Category), stat="identity") +
theme_economist()
ggplot(ProAdult, aes(Category,SWLSmean)) +
geom_bar(aes(fill=Category), stat="identity") +
theme_economist()
ggplot(ProAdult, aes(AnnualIncome)) +
geom_histogram() +
labs(x="\nIncome",y="Frequency\n") +
ggtitle("Annual Income of Adult Procrastinators") +
theme_economist()
ggplot(ProAdult, aes(AnnualIncome)) +
geom_histogram() +
labs(x="\nIncome",y="Frequency\n") +
ggtitle("Annual Income of Adult Procrastinators") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ProAdult, aes(LOG(AnnualIncome)) +
geom_histogram() +
labs(x="\nIncome",y="Frequency\n") +
ggtitle("Annual Income of Adult Procrastinators") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ProAdult, aes(log(AnnualIncome))) +
ggplot(ProAdult, aes(log(AnnualIncome))) +
geom_histogram() +
labs(x="\nIncome",y="Frequency\n") +
ggtitle("Annual Income of Adult Procrastinators") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ProAdult, aes(AnnualIncome)) +
geom_histogram() +
labs(x="\nIncome",y="Frequency\n") +
ggtitle("Annual Income of Adult Procrastinators") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ProAdult, aes(Age)) +
geom_histogram() +
labs(x="\nAge",y="Frequency\n") +
ggtitle("Age of Procrastinators") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ProAdult, aes(Age)) +
geom_histogram() +
labs(x="Age",y="Frequency") +
ggtitle("Age of Procrastinators") +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
df3 <- aggregate(DPmean ~ CountryOfResidence + Category, data = ProAdult, mean)
df3 <- head(df3[order(df3$DPmean, decreasing = TRUE),], n=15)
ggplot(data = df3, aes(y = DPmean,x = reorder(CountryOfResidence, DPmean))) +
geom_col(aes(fill = Category)) +
coord_flip() +
labs(x = 'Country',y = 'DP Mean',title = 'Top 15 Nations Average Procrastination Scores') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(size=7))
ggplot(data = df4, aes(y = GPmean,x = reorder(CountryOfResidence, GPmean))) +
geom_col(aes(fill = Category)) +
coord_flip() +
labs(x = 'Country',y = 'DP Mean',title = 'Top 15 Nations Average Procrastination Scores') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(size=7))
ggplot(ProAdult, aes(Age, log(AnnualIncome))) +
geom_point(aes(color=Gender),stat="identity") +
labs(x = 'Country',y = 'DP Mean',title = 'Top 15 Nations Average Procrastination Scores') +
theme_economist() +
geom_smooth(method = 'lm')
ggplot(ProAdult, aes(Age, log(AnnualIncome))) +
geom_point(aes(color=Gender),stat="identity") +
labs(x = 'Country',y = 'DP Mean',title = 'Top 15 Nations Average Procrastination Scores') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = 'lm')
ggplot(ProAdult, aes(Age, log(AnnualIncome))) +
geom_point(aes(color = Gender),stat = "identity") +
labs(x = 'Age',y = 'log of Income',title = 'Relationship Between Age and Income') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = 'lm')
str(Procrastination$Gender)
Procrastination$Gender <- as.factor(Procrastination$Gender)
levels(Procrastination$Gender)
str(ProAdult$Gender)
Pro <- merge(x = Procrastination,y = HDI, by.x = 'CountryOfResidence', by.y = "Country")
ProAdult <- Pro[Pro$Age > 18,]
str(ProAdult$Gender)
ggplot(ProAdult, aes(SWLSmean, HDI)) +
geom_point(aes(fill=Gender), stat="identity") +
labs(x = 'Age',y = 'log of Income',title = 'Relationship Between Age and Income') +
theme_economist() +
geom_smooth(method = 'lm')
ggplot(ProAdult, aes(SWLSmean, HDI)) +
geom_point(aes(fill=Gender), stat="identity") +
labs(x = 'Age',y = 'log of Income',title = 'Relationship Between Age and Income') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = 'lm')
ggplot(ProAdult, aes(SWLSmean, HDI)) +
geom_point(aes(color=Gender), stat="identity") +
labs(x = 'HDI',y = 'Mean SWLS',title = 'Relationship Between Life Satesfaction Score and Human Development Index') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = 'lm')
ggplot(ProAdult, aes(SWLSmean, HDI)) +
geom_point(), stat="identity") +
ggplot(ProAdult, aes(SWLSmean, HDI)) +
geom_point() +
labs(x = 'HDI',y = 'Mean SWLS',title = 'Relationship Between Life Satesfaction Score and Human Development Index') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = 'lm')
df4b <- data.frame(AgeSummary)
str(ProAdult$Occupation)
GenderTable <- table(ProAdult$Gender)
ProAdult %>%
count_(GenderTable, sort=TRUE)
kable(GenderTable)
?kibble
?kable
kable(matrix(GenderTable, dimnames = list(row,"Statistics for Age")), digits = 0, row.names=TRUE)
ProAdult %>%
count_(GenderTable, sort=TRUE)
kable(matrix(GenderTable))
kable(matrix(GenderTable))
data.frame(matrix(GenderTable))
table(data.frame(matrix(GenderTable)))
data.frame(matrix(GenderTable))
print(data.frame(matrix(GenderTable)))
count(ProAdult,'Gender')
question4c1 <- count(ProAdult,'Gender')
question4c1
question4c1
question4c.work <- count(ProAdult,'WorkStatus')
question4c.work
question4c.occupation <- count(ProAdult,'Occupation')
question4c.occupation
?sort
sort(question4c.occupation$freq)
question4c.occupation$freq
question4c.occupation
class(question4c.occupation)
question4c.occupation[order(freq),]
q4c.occupation <- count(ProAdult,'Occupation')
q4c.occupation[order(q4c.occupation$freq),]
?order
q4c.occupation[order(q4c.occupation$freq, decreasing = TRUE),]
q4c.gender[order(q4c.gender$freq, decreasing = TRUE),]
q4c.gender <- count(ProAdult,'Gender')
q4c.gender[order(q4c.gender$freq, decreasing = TRUE),]
q4c.work <- count(ProAdult,'WorkStatus')
q4c.work[order(q4c.work$freq, decreasing = TRUE),]
head(q4c.occupation[order(q4c.occupation$freq, decreasing = TRUE),],n=15)
q4c.gender2 <- q4c.gender[order(q4c.gender$freq, decreasing = TRUE),]
kable(q4c.gender2)
kable(q4c.gender2[2:3])
kable(q4c.gender2[1:2])
kable(q4c.gender2,row.names=FALSE)
kable(q4c.work2,row.names=FALSE)
q4c.work2 <- q4c.work[order(q4c.work$freq, decreasing = TRUE),]
kable(q4c.work2,row.names=FALSE)
summary(q4c.work2)
str(q4c.work2)
str(q4c.gender2)
kable(q4c.gender2,row.names=FALSE)
q4c.occupation2 <- head(q4c.occupation[order(q4c.occupation$freq, decreasing = TRUE),],n=15)
kable(q4c.occupation2,row.names=FALSE)
q4d <- count(ProAdult,'CountryofResidence')
q4d <- count(ProAdult,'CountryOfResidence')
q4d2 <- head(q4c.occupation[order(q4c.occupation$freq, decreasing = TRUE),],n=15)
kable(q4d2,row.names=FALSE)
q4d <- count(ProAdult,'CountryOfResidence')
q4d2 <- head(q4d[order(q4d$freq, decreasing = TRUE),],n=15)
kable(q4d2,row.names=FALSE)
A <- table(ProAdult$P1,ProAdult$P2)
A[-1,-1]
A[-1,-c(1,2,3)]
class(ProAdult$P1)
Procrastination$WorkStatus <- as.factor(Procrastination$WorkStatus)
Procrastination$P1 <- as.factor(Procrastination$P1)
levels(Procrastination$WorkStatus)
levels(Procrastination$WorkStatus)[levels(Procrastination$WorkStatus) == "0"] <- ""
levels(Procrastination$WorkStatus)
levels(Procrastination$P1)
Procrastination$P2 <- as.factor(Procrastination$P2)
Pro <- merge(x = Procrastination,y = HDI, by.x = 'CountryOfResidence', by.y = "Country")
q4c.work <- count(ProAdult,'WorkStatus')
q4c.work2 <- q4c.work[order(q4c.work$freq, decreasing = TRUE),]
kable(q4c.work2,row.names=FALSE)
q4e <- data.frame(ProAdult$P1,ProAdult$P1)
head(q4e)
q4e <- data.frame(ProAdult$P1,ProAdult$P2)
head(q4e)
q4e2 <- data.frame(count(ProAdult$P1),count(ProAdult$P2))
levels(ProAdult$P2)
str(ProAdult$P2)
Procrastination$P2 <- as.factor(Procrastination$P2)
Pro <- merge(x = Procrastination,y = HDI, by.x = 'CountryOfResidence', by.y = "Country")
ProAdult <- Pro[Pro$Age > 18,]
str(ProAdult$P2)
levels(ProAdult$P2)
levels(Procrastination$P2)[levels(Procrastination$P2) == "0"] <- ""
levels(Procrastination$P2)[levels(Procrastination$P2) == "4"] <- ""
levels(ProAdult$P2)
Pro <- merge(x = Procrastination,y = HDI, by.x = 'CountryOfResidence', by.y = "Country")
levels(ProAdult$P2)
ProAdult <- Pro[Pro$Age > 18,]
levels(ProAdult$P2)
q4e2 <- data.frame(count(ProAdult$P1),count(ProAdult$P2))
head(q4e2)
q4e3 <- q4e2[2:3,]
q4e3
head(q4e)
q4e$match.yes <- sapply(q4e,function(x){
ifelse(ProAdult$P1 = 'yes' & ProAdult$P2 = 'yes', 'BothYes',
ifelse(ProAdult$P1 == 'yes' & ProAdult$P2 == 'yes', 'BothYes',
ifelse(ProAdult$P1 == 'no' & ProAdult$P2 == 'no', 'BothNo',
'')))
q4e$match.yes <- sapply(q4e,function(x){
ifelse(ProAdult$P1 == 'yes' & ProAdult$P2 == 'yes', 'BothYes',
ifelse(ProAdult$P1 == 'no' & ProAdult$P2 == 'no', 'BothNo',
''))
})
head(q4e)
summary(q4e)
q4e <- data.frame(ProAdult$P1,ProAdult$P2)
q4e$match <- sapply(q4e,function(x){
ifelse(ProAdult$P1 == 'yes' & ProAdult$P2 == 'yes', 'BothYes',
ifelse(ProAdult$P1 == 'no' & ProAdult$P2 == 'no', 'BothNo',
''))
})
head(q4e)
q4e.match <- sapply(q4e,function(x){
ifelse(ProAdult$P1 == 'yes' & ProAdult$P2 == 'yes', 'BothYes',
ifelse(ProAdult$P1 == 'no' & ProAdult$P2 == 'no', 'BothNo',
''))
})
class(q4e.match)
head(q4e.match)
ifelse(ProAdult$P1 == 'yes' & ProAdult$P2 == 'yes', 'BothYes',
ifelse(ProAdult$P1 == 'no' & ProAdult$P2 == 'no', 'BothNo',
NA))
q4e.match <- sapply(q4e,function(x){
ifelse(ProAdult$P1 == 'yes' & ProAdult$P2 == 'yes', 'BothYes',
ifelse(ProAdult$P1 == 'no' & ProAdult$P2 == 'no', 'BothNo',
NA))
})
head(q4e.match)
q4e.match <- sapply(q4e,function(x){
ifelse(ProAdult$P1 == 'yes' & ProAdult$P2 == 'yes', 'BothYes',
ifelse(ProAdult$P1 == 'no' & ProAdult$P2 == 'no', 'BothNo',
NULL))
})
q4e.match <- sapply(q4e,function(x){
ifelse(ProAdult$P1 == 'yes' & ProAdult$P2 == 'yes', 'BothYes',
ifelse(ProAdult$P1 == 'no' & ProAdult$P2 == 'no', 'BothNo',
NA))
})
head(count(q4e.match))
?sapply
q4e.match <- sapply(q4e,function(P1P2){
ifelse(ProAdult$P1 == 'yes' & ProAdult$P2 == 'yes', 'BothYes',
ifelse(ProAdult$P1 == 'no' & ProAdult$P2 == 'no', 'BothNo',
NA))
})
head(count(q4e.match))
head(count(q4e.match[,3:4]))
head(count(q4e.match[]))
head(q4e.match)
head(count(q4e.match,'match))
q4e2 <- data.frame(count(ProAdult$P1),count(ProAdult$P2))
q4e3 <- q4e2[2:3,]
q4e3
A <- table(ProAdult$P1,ProAdult$P2)
A[-1,-1]
A[-1,-c(1,2,3)]
#could use some labels
head(count(q4e.match,'match'))
summary(q4e.match)
q4e2 <- sapply(q4e,function(x){
ifelse(ProAdult$P1 == 'yes' & ProAdult$P2 == 'yes', 'BothYes',
ifelse(ProAdult$P1 == 'no' & ProAdult$P2 == 'no', 'BothNo',
NA))
})
head(q4e2)
q4e3 <- q4e2['match']
head(q4e3)
q4e2 <- sapply(q4e,function(x){
ifelse(ProAdult$P1 == 'yes' & ProAdult$P2 == 'yes', 'BothYes',
ifelse(ProAdult$P1 == 'no' & ProAdult$P2 == 'no', 'BothNo',
NA))
})
head(q4e2)
head(q4e)
q4e <- data.frame(ProAdult$P1,ProAdult$P2)
q4e2 <- sapply(q4e,function(x){
ifelse(ProAdult$P1 == 'yes' & ProAdult$P2 == 'yes', 'BothYes',
ifelse(ProAdult$P1 == 'no' & ProAdult$P2 == 'no', 'BothNo',
NA))
})
head(q4e)
head(q4e2)
q4e$match <- NA
q4e$match[q4e$ProAdult.P1 == 'yes' & ProAdult$P2 == 'yes',] <- 'BothYes'
q4e$match[q4e$ProAdult.P1 == 'no' & ProAdult$P2 == 'no',] <- 'BothNo'
q4e$match[q4e$ProAdult.P1 == 'yes' & q4e$ProAdult$P2 == 'yes',] <- 'BothYes'
q4e$match[q4e$ProAdult.P1 == 'no' & q4e$ProAdult$P2 == 'no',] <- 'BothNo'
q4e2 <- sapply(q4e,function(x){
ifelse(ProAdult$P1 == 'yes' & ProAdult$P2 == 'yes', 'BothYes',
ifelse(ProAdult$P1 == 'no' & ProAdult$P2 == 'no', 'BothNo',
NA))
})
head(q4e2)
head(q4e)
colnames(q4e) <- c('P1','P2')
head(q4e)
ifelse(q4e$P1 == 'yes' & q4e$P2 == 'yes', 'BothYes',
ifelse(q4e$P1 == 'no' & q4e$P2 == 'no', 'BothNo',
NA))
head(q4e2)
q4e3 <- q4e2['match']
head(q4e3)
q4e3 <- q4e2[3]
head(q4e3)
head(q4e2)
q4e2 <- NULL
q4e2 <- sapply(q4e,function(x){
ifelse(q4e$P1 == 'yes' & q4e$P2 == 'yes', 'BothYes',
ifelse(q4e$P1 == 'no' & q4e$P2 == 'no', 'BothNo',
NA))
})
View(q4e2)
ifelse(P1 == 'yes' & P2 == 'yes', 'BothYes',
ifelse(P1 == 'no' & P2 == 'no', 'BothNo',
NA))
ifelse(q4e$P1 == 'yes' & q4e$P2 == 'yes', 'BothYes',
ifelse(q4e$P1 == 'no' & q4e$P2 == 'no', 'BothNo',
''))
head(q4e2)
head(q4e2[3])
q4e3 <- q4e2[,3]
head(q4e3)
head(count(q4e3))
head(count(q4e2,[3]))
class(q4e3)
class(q4e2)
data.frame(q4e2)
q4e3 <- data.frame(q4e2[,3])
head(q4e3)
head(count(q4e3))
count(q4e3)
count(q4e2[,3])
?coutn
?count
kable(count(q4e2[,3]))
kable(count(q4e2[,3]),dimnames = list(c('Match','Frequency'),"Statistics for Age"))
head(q4e2)
q4e2$match <- sapply(q4e,function(x){
ifelse(q4e$P1 == 'yes' & q4e$P2 == 'yes', 'BothYes',
ifelse(q4e$P1 == 'no' & q4e$P2 == 'no', 'BothNo',
''))
})
head(q4e2)
str(q4e2)
count(q4e2)
kable(count(q4e2[,3]),dimnames = list(c('Match','Frequency'),"Statistics for Age"),row.names = FALSE)
kable(count(q4e2,'<NA>'),dimnames = list(c('Match','Frequency'),"Statistics for Age"),row.names = FALSE)
kable(count(q4e2),dimnames = list(c('Match','Frequency'),"Statistics for Age"),row.names = FALSE)
class(q4e)
class(q4e2)
q4e2 <- sapply(q4e,function(x){
ifelse(q4e$P1 == 'yes' & q4e$P2 == 'yes', 'BothYes',
ifelse(q4e$P1 == 'no' & q4e$P2 == 'no', 'BothNo',
''))
})
kable(count(q4e2),dimnames = list(c('Match','Frequency'),"Statistics for Age"),row.names = FALSE)
q4e3 <- count(q4e2)
head(q4e3)
kable(q4e3[3:4],dimnames = list(c('Match','Frequency'),"Statistics for Age"),row.names = FALSE)
kable(q4e3[3:4],row.names = FALSE)
kable(q4e3[2:3],row.names = FALSE)
head(q4e3)
q4e3 <- count(q4e2)[3:4]
head(q4e3)
colnames(q4e3) <- c('Match','Freq')
head(q4e3)
q4e3 <- count(q4e2)[,3:4]
colnames(q4e3) <- c('Match','Freq')
head(q4e3)
kable(q4e3,row.names = FALSE)
#Question 4e
q4e <- data.frame(ProAdult$P1,ProAdult$P2)
colnames(q4e) <- c('P1','P2')
q4e2 <- sapply(q4e,function(x){
ifelse(q4e$P1 == 'yes' & q4e$P2 == 'yes', 'BothYes',
ifelse(q4e$P1 == 'no' & q4e$P2 == 'no', 'BothNo',
''))
})
q4e3 <- count(q4e2)[,3:4]
head(q4e3)
head(q4e2)
q4e2 <- sapply(q4e,function(x){
ifelse(q4e$P1 == 'yes' & q4e$P2 == 'yes', 'BothYes',
ifelse(q4e$P1 == 'no' & q4e$P2 == 'no', 'BothNo',
''))
})
head(q4e2)
q4e$match <- sapply(q4e,function(x){
ifelse(q4e$P1 == 'yes' & q4e$P2 == 'yes', 'BothYes',
ifelse(q4e$P1 == 'no' & q4e$P2 == 'no', 'BothNo',
''))
})
head(q4e)
head(q4e)
q4e2 <- sapply(q4e$match,function(x){
ifelse(q4e$P1 == 'yes' & q4e$P2 == 'yes', 'BothYes',
ifelse(q4e$P1 == 'no' & q4e$P2 == 'no', 'BothNo',
''))
})
head(q4e2)
q43$match <- NULL
q4e$match <- NULL
q4e$match <- NULL
q4e2 <- sapply(q4e$match,function(x){
ifelse(q4e$P1 == 'yes' & q4e$P2 == 'yes', 'BothYes',
ifelse(q4e$P1 == 'no' & q4e$P2 == 'no', 'BothNo',
''))
})
head(q4e2)
head(q4e2)
q4e2 <- sapply(q4e,function(x){
ifelse(q4e$P1 == 'yes' & q4e$P2 == 'yes', 'BothYes',
ifelse(q4e$P1 == 'no' & q4e$P2 == 'no', 'BothNo',
''))
})
head(q4e2)
q4e3 <- count(q4e2,'P1')[,3:4]
View(q4e2)
?count
n_distinct(q4e2)
head(q4e2)
class(q4e2)
as.data.frame(q4e2)
q4e2 <- as.data.frame(q4e2[,1])
class(q4e2)
head(q4e2)
q4e3 <- count(q4e2)
head(q4e3)
colnames(q4e3) <- c('Match','Freq')
head(q4e3)
#Question 4e
q4e <- data.frame(ProAdult$P1,ProAdult$P2)
colnames(q4e) <- c('P1','P2')
q4e2 <- sapply(q4e,function(x){
ifelse(q4e$P1 == 'yes' & q4e$P2 == 'yes', 'BothYes',
ifelse(q4e$P1 == 'no' & q4e$P2 == 'no', 'BothNo',
''))
})
q4e2 <- as.data.frame(q4e2[,1])
q4e3 <- count(q4e2)
colnames(q4e3) <- c('Match','Freq')
kable(q4e3,row.names = FALSE,dimnames = list(c('Match','Frequency'),"Statistics for Age")
)
#Question 4e
q4e <- data.frame(ProAdult$P1,ProAdult$P2)
colnames(q4e) <- c('P1','P2')
q4e2 <- sapply(q4e,function(x){
ifelse(q4e$P1 == 'yes' & q4e$P2 == 'yes', 'BothYes',
ifelse(q4e$P1 == 'no' & q4e$P2 == 'no', 'BothNo',
''))
})
q4e2 <- as.data.frame(q4e2[,1])
q4e3 <- count(q4e2)
colnames(q4e3) <- c('Match','Freq')
kable(q4e3,row.names = FALSE,dimnames = c('Match','Frequency'),"Statistics for Age")
?kable
#Question 4e
q4e <- data.frame(ProAdult$P1,ProAdult$P2)
colnames(q4e) <- c('P1','P2')
q4e2 <- sapply(q4e,function(x){
ifelse(q4e$P1 == 'yes' & q4e$P2 == 'yes', 'BothYes',
ifelse(q4e$P1 == 'no' & q4e$P2 == 'no', 'BothNo',
''))
})
q4e2 <- as.data.frame(q4e2[,1])
q4e3 <- count(q4e2)
colnames(q4e3) <- c('Match','Freq')
kable(q4e3,row.names = FALSE,col.names = c('Match','Frequency'),caption = "Statistics for Age")

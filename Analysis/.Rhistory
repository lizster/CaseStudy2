source('~/SMU Data Science/MSDS_6306_Doing_Data_Science/CaseStudy2/Analysis/MakeFile1.R')
library(data.table)
HDI <- read.csv('HumanDevelopmentIndex.csv')
pro <- read.csv('Procrastination.csv')
df <- merge(x = pro,y = HDI,by.x = 'Country.of.residence', by.y = "Country")
#Questions 2a
one <- data.frame(nrow(pro),ncol(pro))
colnames(one) <- c("Number of Rows", "Number of Columns")
setwd("~/SMU Data Science/MSDS_6306_Doing_Data_Science/CaseStudy2/Analysis")
HDI <- read.csv('Data/HumanDevelopmentIndex.csv')
pro <- read.csv('Data/Procrastination.csv')
df <- merge(x = pro,y = HDI,by.x = 'Country.of.residence', by.y = "Country")
one <- data.frame(nrow(pro),ncol(pro))
colnames(one) <- c("Number of Rows", "Number of Columns")
str(df$Number.of.sons)
levels(df$Number.of.sons)
#Question 2b
colnames(df)[1] <- 'Country'
colnames(df)[2] <- 'Age'
colnames(df)[3] <- 'Gender'
colnames(df)[4] <- 'KidStatus'
colnames(df)[5] <- 'Education'
colnames(df)[6] <- 'WorkStatus'
colnames(df)[7] <- 'Income'
colnames(df)[8] <- 'Occupation'
colnames(df)[9] <- 'TenureYears'
colnames(df)[10] <- 'TenureMonths'
colnames(df)[11] <- 'CommunitySize'
colnames(df)[12] <- 'MatritalStatus'
colnames(df)[13] <- 'Sons'
colnames(df)[14] <- 'Daughters'
#colnames(df)[15] <- ''
#Needs more work
levels(df$Sons)[levels(df$Sons) == "Female"] <- "2"
levels(df$Sons)[levels(df$Sons) == "Male"] <- "1"
df$Sons <- as.integer(df$Sons)
str(df$Sons)
str(df$Daughters)
str(df$Country)
levels(df$Country)[levels(df$Country) == "0"] <- ""
str(df$Country)
df$TenureYears <- as.integer(df$TenureYears)
hist(df$TenureYears)
source('~/SMU Data Science/MSDS_6306_Doing_Data_Science/CaseStudy2/Analysis/MakeFile2.R')
source('~/SMU Data Science/MSDS_6306_Doing_Data_Science/CaseStudy2/Analysis/MakeFile2.R')
df <- read.csv('Data/Procrastination2.csv')
count(df$Gender)
frequency(df$Gender)
summary(df$Gender)
A <- summary(df$Gender)
a[1]
A[1]
A[2]
A[3]
table(A)
table(A[2],A[3])
table(df$Gender)
tableA <- table(A[2],A[3])
tableA
?margin.table
margin.table(c(A[2],A[3]))
margin.table(A[2],A[3])
margin.table(A[2])
margin.table(A,2)
margin.table(A)
margin.table(tableA)
margin.table(tableA,2)
margin.table(summary(df$Gender))
margin.table(df$Gender)
table(df$Gender)
table(df$WorkStatus)
table(df$WorkStatus[-1])
table(df$WorkStatus[-1:2])
table(df$WorkStatus[0])
ftable(df$Occupation)
table(df$Occupation)
ftable(df$WorkStatus)
table(df$WorkStatus)
install.packages('gmodels')
margin.table(df$Gender)
library(gmodels)
crosstable(df$Gender)
CrossTable(df$Gender)
CrossTable(df$Gender)[2]
CrossTable(df$Gender)[1]
table(count(df$Country))
table(df$Country)
?table
data.frame(df$Country)
data.frame(unique(df$Country))
?data.frame
data.frame(unique(df$Occupation))
data.frame(count(df$Country))
data.frame(count(df$Gender))
data.frame(unique(df$Gender))
data.frame(summary(df$Gender))
lapply(df, function(x) count())
lapply(df$Gender, function(x) count())
lapply(df$Gender, function(x) count(x))
lapply(df, function(x) count(x))
A <- data.frame(summary(df$Gender))
A
table(df$Gender)
ftable(df$Gender)
table(df$Country)
?order
A <- table(df$Country, order())
setorder(A)
A
A <- table(df$Country)
setorder(A)
A <- data.table(df$Country)
A
A <- data.table(count(df$Country))
A <- data.table(unique(df$Country))
A
A <- data.table(unique(df$Country), count(df$Country))
?aggregate
aggregate(df$Country)
aggregate(Country, data=df, FUN=count)
A <- data.table(unique(df$Country), count(as.character(df$Country)))
?count
A <- data.table(unique(df$Country), tally(df$Country))
df %>% count(Country)
df %>% count(Country, sort=TRUE)
df %>% tally(Country, sort=TRUE)
table(df %>% count(Country, sort=TRUE))
table(A)
A
df %>% count(Country, sort=TRUE)
table(df$Do.you.consider.yourself.a.procrastinator.,df$Do.others.consider.you.a.procrastinator.)
levels(df$Do.others.consider.you.a.procrastinator.)
df[60]
colnames(df)[60]
colnames(df)[60] <- 'YouPro'
colnames(df)[61] <- 'OthersPro'
levels(df$OthersPro)[levels(df$OthersPro) == "0"] <- ""
levels(df$OthersPro)[levels(df$OthersPro) == "4"] <- ""
table(df$YouPro,df$OthersPro)
data.table(df$YouPro,df$OthersPro)
aggregate(df$YouPro ~ df$OthersPro, FUN = count)
aggregate(df$YouPro ~ df$OthersPro, FUN = sum)
aggregate(df$YouPro ~ df$OthersPro, FUN = tally)
aggregate(df$YouPro ~ df$OthersPro)
df %>% count(Country, sort=TRUE)
table(df$YouPro,df$OthersPro)
A <- table(df$YouPro,df$OthersPro)
A
A[-1,]
A[-1,-1]
Q4A <- table(df$Gender)
Q4A
Q4A[,-1]
Q4A[-1,]
data.frame(unique(df$Occupation))
table(df$Occupation) #table is very large.
df %>% count(Occupation, sort=TRUE)
Q4C <- df %>% count(Occupation, sort=TRUE)
Q4C[,-1]
Q4C[-1,]
table(Q4C[-1,])
Q4C[-1:2,]
Q4C[-1,]
Q4C
table(df$WorkStatus)
df %>% count(WorkStatus, sort=TRUE)
?count
table(df$Gender)
df %>% count(WorkStatus, sort=TRUE)
A <- table(df$YouPro,df$OthersPro)
A[-1,-1]
lapply(df$Country, table)
lapply(df, function(x) {
if (is.numeric(x)) return(summary(x))
if (is.factor(x)) return(table(x))
})
lapply(df$Country, function(x) {
if (is.numeric(x)) return(summary(x))
if (is.factor(x)) return(table(x))
})
A <- data.table(df$YouPro,df$OthersPro)
A[-1,-1]
A
A <- data.table(df$YouPro = df$OthersPro)
A <- data.table(df$YouPro == df$OthersPro)
A
ggplot(df,aes()) +
geom_histogram()
library(ggplot2)
ggplot(df,aes()) +
geom_histogram()
ggplot(df,aes(HDI)) +
geom_histogram()
ggplot(df$Country,aes(HDI)) +
geom_histogram()
ggplot(df$Country,aes(HDI)) +
geom_bar()
ggplot(df$DPmean,aes(HDI)) +
geom_bar()
ggplot(df$DPmean,aes(df$Category)) +
geom_bar()
ggplot(df$DPmean,aes(df$Category)) +
geom_histogram()
ggplot(DPmean,aes(df$Category)) +
geom_histogram()
ggplot(df$DPmean) +
geom_histogram(aes(df$Category))
ggplot(df) +
geom_histogram(aes(df$Category))
ggplot(df) +
geom_histogram(DPMean, aes(df$Category))
q4a <- ggplot(data = df, aes(x = DPmean,y = Country)) +
geom_col(color = 'red',fill = 'pink') +
labs(y = 'Median ABV',title = 'Median Alcohol Content') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
q4a <- ggplot(data = df, aes(x = DPmean,y = Country)) +
geom_col(color = 'red',fill = 'pink') +
labs(y = 'Median ABV',title = 'Median Alcohol Content') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
library(ggthemes)
q4a <- ggplot(data = df, aes(x = DPmean,y = Country)) +
geom_col(color = 'red',fill = 'pink') +
labs(y = 'Median ABV',title = 'Median Alcohol Content') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df, aes(x = DPmean,y = Country)) +
geom_col(color = 'red',fill = 'pink') +
labs(y = 'Median ABV',title = 'Median Alcohol Content') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df, aes(x = DPmean)) +
geom_col(color = 'red',fill = 'pink') +
labs(y = 'Median ABV',title = 'Median Alcohol Content') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df, aes(x = DPmean,y = Country)) +
geom_col(color = 'red',fill = 'pink') +
coord_flip() +
labs(y = 'Median ABV',title = 'Median Alcohol Content') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df, aes(x = DPmean,y = Country)) +
geom_col(aes(fill = 'Category')) +
coord_flip() +
labs(y = 'Median ABV',title = 'Median Alcohol Content') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df, aes(y = DPmean,x = Country)) +
geom_col(aes(fill = 'Category')) +
coord_flip() +
labs(y = 'Median ABV',title = 'Top 15 Nations Average Procrastination Scores') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df, aes(y = DPmean,x = Country)) +
geom_col(aes(fill = Category)) +
coord_flip() +
labs(y = 'Median ABV',title = 'Top 15 Nations Average Procrastination Scores') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df, aes(y = DPmean,x = Country)) +
geom_col(aes(fill = Category),position = position_stack(reverse = TRUE)) +
coord_flip() +
labs(y = 'Median ABV',title = 'Top 15 Nations Average Procrastination Scores') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
?geom_col
ggplot(data = df, aes(y = DPmean,x = Country)) +
geom_col(aes(fill = Category),position = position_stack(reverse = TRUE)) +
coord_flip() +
labs(y = 'Median ABV',title = 'Top 15 Nations Average Procrastination Scores') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df, aes(y = DPmean,x = Country)) +
geom_bar(aes(fill = Category),position = position_stack(reverse = TRUE)) +
coord_flip() +
labs(y = 'Median ABV',title = 'Top 15 Nations Average Procrastination Scores') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df, aes(y = DPmean,x = Country)) +
geom_col(aes(fill = Category) +
coord_flip() +
labs(y = 'Median ABV',title = 'Top 15 Nations Average Procrastination Scores') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df, aes(y = DPmean,x = Country)) +
geom_col(aes(fill = Category)) +
coord_flip() +
labs(y = 'Median ABV',title = 'Top 15 Nations Average Procrastination Scores') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df, aes(y = DPmean,x = Country)) +
geom_col(aes(fill = Category)) +
coord_flip() +
labs(y = 'Median ABV',title = 'Top 15 Nations Average Procrastination Scores') +
theme_economist() +
theme(plot.title = element_text(hjust = 0.5))
df2 <- df$Country[head(sort(df$DPmean,decreasing=TRUE), n = 15)]
df2
df2 <- head(sort(df$DPmean,decreasing=TRUE), n = 15)
df2
hist(df$DPmean)
hist(df$AIPmean)
hist(df$GPmean)
top_fifteen <- df %>%
filter(rank(desc(DPmean))<=15)
library(plyr)
head(arrange(df$Country,desc(df$DPmean)), n = 15)
head(arrange(df,desc(df$DPmean)), n = 15)
head(arrange(df$Country,desc(df$DPmean)), n = 15)
